<?rb ####################################################################### ?>
<?rb ## Copyright (c) by Vincent Greff                                       ?>
<?rb ## All Rights Reserved.                                                 ?>
<?rb ####################################################################### ?>
<?rb i=Codegen.single_indent() ?>
<?rb if @cls.streamable_friend_decl_required ?>
// Support for streaming non-static streamable members of #{@cls.name}
<?rb if @cls.streamable_inline or @cls.streamable_inline_custom ?>
#{@cls.template_decl('inline')}
<?rb end ?>
#{@cls.api_decl_space}MemStream& operator<<(MemStream& out, #{@cls.scoped(@cls.templatized(@cls.name))} const& item)
{
<?rb if @cls.streamers_included ?>
#{i}using etf::utils::streamers::operator<<;
<?rb end ?>
<?rb if @cls.streamable_custom or @cls.streamable_inline_custom ?>
#{Codegen.protect_block("#{@cls.protect_block_tag} custom streamer")}
<?rb else ?>

<?rb @cls.streamed_bases.each do |sb| ?>
#{i}out << static_cast<#{sb} const&>(item);
<?rb end ?>
<?rb @cls.streamable_members.each do |m| ?>
<?rb if m.streamable_custom ?>
#{Codegen.protect_block("#{m.name} custom streamer")}
<?rb else ?>
<?rb if m.stream_insert_override ?>
#{i}out << #{m.stream_insert_override};
<?rb else ?>
#{i}out << item.#{m.variable_name};
<?rb end ?>
<?rb end ?>
<?rb end ?>

<?rb end ?>
#{i}return out;
}

// Support for streaming non-static streamable members of #{@cls.name}
<?rb if @cls.streamable_inline or @cls.streamable_inline_custom ?>
#{@cls.template_decl('inline')}
<?rb end ?>
#{@cls.api_decl_space}MemStream& operator>>(MemStream& out, #{@cls.scoped(@cls.templatized(@cls.name))} & item)
{
<?rb if @cls.streamers_included ?>
#{i}using etf::utils::streamers::operator>>;
<?rb end ?>
<?rb if @cls.streamable_custom or @cls.streamable_inline_custom ?>
#{Codegen.protect_block("#{@cls.protect_block_tag} custom streamer")}
<?rb else ?>

<?rb @cls.streamed_bases.each do |sb| ?>
#{i}out >> static_cast<#{sb} const&>(item);
<?rb end ?>
<?rb @cls.streamable_members.each do |m| ?>
<?rb if m.streamable_custom ?>
#{Codegen.protect_block("#{m.name} custom streamer")}
<?rb else ?>
<?rb if m.stream_insert_override ?>
#{i}out >> #{m.stream_insert_override};
<?rb else ?>
#{i}out >> item.#{m.variable_name};
<?rb end ?>
<?rb end ?>
<?rb end ?>

<?rb end ?>
#{i}return out;
}

<?rb end ?>
