#######################################################################
## Copyright (c) by Daniel Davidson                                    
## All Rights Reserved.                                                
#######################################################################
if not @cls.no_class
if(@cls.disable_windows_warnings.length>0)
i=Codegen.single_indent
 _buf << %Q`
#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable : #{(@cls.disable_windows_warnings & @cls.disable_windows_warnings).join(' ')})
#endif
\n`
end
@cls.forward_enums.each do |enum|
 _buf << %Q`#{Codegen.indent_absolute_text(enum.enum_header_contents, 0)} 
\n`
end
if @cls.forward_typedefs.length > 0
 _buf << %Q`
#{i}// Forward typedefs\n`
@cls.forward_typedefs.each do |td|
 _buf << %Q`#{td};\n`
end
 _buf << %Q`\n`
end
if 0 != @cls.additions_namespace_forward_class.length
 _buf << %Q`#{@cls.additions_namespace_forward_class.join(Codegen::NL)}
\n`
end
if @cls.class_forward_section
 _buf << %Q`#{Codegen.protect_block("#{@cls.protect_block_tag} class forward section")}
\n`
end
if @cls.typedef_ptr or @cls.typedef_const_ptr
 _buf << %Q`class #{@cls.name};\n`
if @cls.typedef_ptr
 _buf << %Q`typedef boost::shared_ptr< #{@cls.name} > #{@cls.name}_ptr;\n`
end
if @cls.typedef_const_ptr
 _buf << %Q`typedef boost::shared_ptr< const #{@cls.name} > #{@cls.name}_const_ptr;\n`
end
 _buf << %Q`\n`
end
if @cls.brief and @cls.brief.length > 0
 _buf << %Q`//! #{@cls.brief}\n`
end
if @cls.descr.length > 0
 _buf << %Q`#{Codegen.indent_text("""/**
#{@cls.descr} 
*/""")}\n`
end
 _buf << %Q`#{@cls.class_definition.chomp}\n`
if @cls.dtor_virtual_inline_noop
 _buf << %Q`\n`
if @cls.template_decls.length > 0
 _buf << %Q`#{@cls.template_decls_text}\n`
end
 _buf << %Q`inline #{@cls.templatized(@cls.name)}::~#{@cls.name}() {}\n`
end
if (@cls.streamable_inline or @cls.streamable_inline_custom) and !@cls.nesting_class
 _buf << %Q`
#{Codegen.indent_absolute_text(@cls.streamable_impl().chomp, 0)} \n`
end   
if @cls.post_class_typedefs.length>0
@cls.post_class_typedefs.each do |td|
 _buf << %Q`#{Codegen.indent_absolute_text(td, 0)};\n`
end
 _buf << %Q`\n`
end
if @cls.post_class_section
 _buf << %Q`
#{Codegen.indent_text(Codegen.protect_block("#{@cls.protect_block_tag} post class"))}\n`
end
if @cls.additions_header_post_class.length>0
 _buf << %Q`
#{Codegen.indent_absolute_text(@cls.additions_header_post_class, 0)}
\n`
end
if(@cls.disable_windows_warnings.length>0)
 _buf << %Q`
#if defined(_MSC_VER)
#pragma warning(pop)
#endif
\n`
end
end
