#######################################################################
## Copyright (c) by Daniel Davidson                                    
## All Rights Reserved.                                                
#######################################################################
require 'codegen'
require 'codegen/cpp'
 _buf << %Q`#{Codegen.cpp_copyright(@file_details.filename, @file_details.brief)}\n`
if @file_details.include_guard
 _buf << %Q`#ifndef #{@file_details.include_guard}
#define #{@file_details.include_guard}\n`
end
 _buf << %Q`\n`
if 0 != @file_details.pre_include_defines.length
 _buf << %Q`#{@file_details.pre_include_defines.join("\\n")}\n`
end
if 0 != @file_details.pre_include_additions.length
 _buf << %Q`#{@file_details.pre_include_additions.join("\\n")}\n`
end
if 0 != @file_details.includes.length
 _buf << %Q`#{Codegen::Cpp.clean_includes(@file_details.includes)}\n`
end
if 0 != @file_details.includes.length
 _buf << %Q`\n`
end
if 0 != @file_details.pre_namespace_contents.length
 _buf << %Q`#{@file_details.pre_namespace_contents}
\n`
end
if 0 != @file_details.include_pre_namespace_custom.length
 _buf << %Q`#{Codegen.protect_block("#{@file_details.fully_qualified_name} #{@file_details.include_pre_namespace_custom}")}
\n`
end
indent_level = 0
@file_details.namespace.each do |ns|
 _buf << %Q`namespace #{ns}
{\n`
indent_level = 1
end
 _buf << %Q`\n`
if 0 != @file_details.include_namespace_custom.length
 _buf << %Q`#{Codegen.indent_text(Codegen.protect_block("#{@file_details.fully_qualified_name} #{@file_details.include_namespace_custom}"), indent_level)}
\n`
end
if 0 != @file_details.namespace_contents.length
 _buf << %Q`
#{Codegen.indent_text(@file_details.namespace_contents, indent_level)}

\n`
end
@file_details.namespace.reverse.each do |ns|
 _buf << %Q`} // namespace #{ns}\n`
end
(0..indent_level).to_a.each { |x| Codegen.outdent() }
 _buf << %Q`\n`
if 0 != @file_details.post_namespace_contents.length
 _buf << %Q`#{@file_details.post_namespace_contents}\n`
end
 _buf << %Q`\n`
if 0 != @file_details.include_post_namespace_custom.length
 _buf << %Q`#{Codegen.protect_block("#{@file_details.fully_qualified_name} #{@file_details.include_post_namespace_custom}")}
\n`
end
if @file_details.version_control_commit
 _buf << %Q`namespace {
  etf::utils::Version_control_commit::Version_control_commit::Pointer_t 
    version_control_commit(etf::utils::Version_control_commit::get_instance());
}\n`
end
if @file_details.include_guard
 _buf << %Q`#endif\n`
end
