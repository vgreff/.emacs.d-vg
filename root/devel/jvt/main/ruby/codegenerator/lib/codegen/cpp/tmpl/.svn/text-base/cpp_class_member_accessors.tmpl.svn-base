<?rb i=Codegen.single_indent() ?>
<?rb if not @cls.readable_members.empty? or not @cls.writable_members.empty? ?>
#{i}/////////////////////////////////////////////////////////////////
#{i}// member accessors
#{i}/////////////////////////////////////////////////////////////////
<?rb end ?>
<?rb @cls.members.each do |m| ?>
    <?rb if @cls.readable_members.include? m ?>
        <?rb static = (m.static)? 'static ' : '' ?>
        <?rb konst = (m.static)? '' : ' const' ?>
            <?rb if m.brief and @cls.accessor_docs ?>
#{i}//! reader for #{m.name} <B>#{m.brief}</B>
            <?rb end ?>
        <?rb if m.accessor_type ?>
#{m.ifdef "#{i}#{static}#{m.accessor_type} #{m.name}()#{konst} {
#{i}#{i}return #{m.accessor_type}(#{m.variable_name});
#{i}}"}
        <?rb else ?>
#{m.ifdef "#{i}#{static}#{m.pass_type_const} #{m.name}()#{konst} {
#{i}#{i}return #{m.variable_name};
#{i}}"}
        <?rb end ?>

    <?rb end ?>
    <?rb if @cls.writable_members.include? m ?>
            <?rb if m.brief and @cls.accessor_docs ?>
#{i}//! writer for #{m.name} <B>#{m.brief}</B>
            <?rb end ?>
        <?rb if m.accessor_type ?>
#{i}#{static}void #{m.name}(#{m.accessor_type} val) {
        <?rb else ?>
#{i}#{static}void #{m.name}(#{m.pass_type_const} val) {
        <?rb end ?>
#{i}#{i}#{m.variable_name} = val;
#{i}}
        <?rb if m.pass_by_ref ?>

            <?rb if m.brief and @cls.accessor_docs ?>
#{i}//! non-const reader for #{m.name} <B>#{m.brief}</B>
            <?rb end ?>
#{m.ifdef "#{i}#{static}#{m.pass_type_non_const} #{m.name}() {
#{i}#{i}return #{m.variable_name};
#{i}}"}
        <?rb end ?>

    <?rb end ?>
<?rb end ?>
